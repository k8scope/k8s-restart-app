name: e2e-tests

on:
  push:
    branches:
      - "**"
    paths-ignore:
      - "*.md"
      - LICENSE
      - docker compose*
      - .dockerignore
      #- .github/
      - .gitignore
      - .gitmodules
      - docs/
      - hack/
      - PROJECT
  pull_request:
    branches:
      - "!dependabot/**"


env:
  IMG: ghcr.io/k8scope/k8s-restart-app:dev
  ARTIFACT_NAME: artifact.tar

jobs:
  build-temp-container:
    name: build container
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Build container
      run: |
        make docker-build
    - name: Save image
      run: |
          docker save -o ${{ env.ARTIFACT_NAME }} ${{ env.IMG }}
    - name: Upload image artifact tar
      uses: actions/upload-artifact@v4
      with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_NAME }}
          retention-days: 1

  e2e-tests:
    name: e2e tests
    runs-on: ubuntu-latest
    env:
      KUBERNETES_NAMESPACE: restart-app-system
      CLUSTER_NAME: restart-app-e2e
    needs:
      - build-temp-container
    strategy:
      fail-fast: false
      matrix:
        kind_node_image:
          - kindest/node:v1.31.0
          - kindest/node:v1.30.4
          - kindest/node:v1.29.2
    steps:
      - uses: actions/setup-go@v5
      - uses: azure/setup-helm@v4
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/download-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}

      - name: Load image
        run: docker load -i ${{ env.ARTIFACT_NAME }}

      - name: Create K8s Kind Cluster
        uses: helm/kind-action@v1.12.0
        with:
          node_image: ${{ matrix.kind_node_image }}
          cluster_name: ${{ env.CLUSTER_NAME }}
          config: _e2e/config/kind_config.yaml

      - name: Install dependencies for e2e tests
        run: make helm-install

      - name: go mod tidy
        run: go mod tidy

      - name: Run e2e tests
        run: make e2e-run

  e2e-test-complete:
    name: e2e test complete
    runs-on: ubuntu-latest
    needs:
      - e2e-tests
    steps:
      - name: Confirm e2e tests passed
        run: echo "e2e tests passed"
